{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","ErrorNotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","signal","setTimeout","fetch","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","historyRedirect","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","BlogDetails","useParams","onClick","ErrorNotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19df7ea5.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n    return (  \r\n        <nav className=\"navbar\">\r\n            <h1>Niima's Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\">New blog</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({blogs, title}) => {\r\n    return (  \r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map((blog)=>(\r\n\r\n            <div className=\"blog-preview\" key={blog.id}>\r\n                <Link to = {`/blogs/${blog.id}`}> \r\n                    <h2>{blog.title}</h2>\r\n                    <p>Written by {blog.author}</p>\r\n                </Link>  \r\n            </div>\r\n        ))}\r\n        </div>\r\n    );\r\n}\r\nexport default BlogList;","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n\r\n    const[data, setData] = useState(null);\r\n    const[isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() =>{\r\n        // Abort Controller\r\n        const abortCont = new AbortController();\r\n        const signal = abortCont.signal;\r\n\r\n        setTimeout(() => {\r\n            fetch(url,{signal})\r\n            .then(res=> {\r\n                if(!res.ok){\r\n                throw Error('could not fetch data');\r\n                }\r\n                return res.json();})\r\n            .then(data=> {\r\n                setData(data);\r\n                setIsPending(false);\r\n                setError(null);\r\n            })\r\n            .catch(err => {\r\n                if (err.name === 'AbortError'){\r\n                    console.log('fetch Aborted');\r\n                } else{\r\n                    setError(err.message);\r\n                    setIsPending(false);\r\n                }\r\n            })\r\n        },1000);\r\n        return () => abortCont.abort();\r\n    },[url]);\r\n\r\n    return{ data, isPending, error };\r\n}\r\n\r\nexport default useFetch;","import BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\nfunction Home() {\r\n\r\n  const {data:blogs, isPending, error} = useFetch('http://localhost:8000/blogs');\r\n  \r\n  return (\r\n    <div className=\"home\">\r\n      {/*conditional templating in react*/}\r\n      {error && <div>{error}</div>}\r\n      {isPending && <div>Loading...</div>}\r\n      {blogs && <BlogList blogs={blogs}  title=\"Here is all my blogs!\"/> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useState } from \"react\";\r\nimport { useHistory} from 'react-router-dom';\r\n\r\nconst Create = () => {\r\n    const [title, setTitle]=useState('');\r\n    const [body, setBody]=useState('');\r\n    const [author, setAuthor]=useState('niima');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const historyRedirect = useHistory();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = {title, body, author};\r\n\r\n        setIsPending(true);\r\n\r\n        fetch('http://localhost:8000/blogs',{\r\n            method:'POST',\r\n            headers:{ \"Content-Type\":\"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        }).then(() =>{\r\n            console.log('new blog added');\r\n            setIsPending(false);\r\n\r\n            //push the user to the home page after submitting the form \r\n            historyRedirect.push('/');\r\n        });\r\n        \r\n    }\r\n    return (\r\n        <div className=\"create\">\r\n            <h2>Add a New Blog</h2>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <label>Blog title:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    required \r\n                    value={title}\r\n                    onChange={(e) => {\r\n                        setTitle(e.target.value); \r\n                    }}\r\n                />\r\n\r\n                <label>Blog body:</label>\r\n                <textarea\r\n                    required\r\n                    value ={body}\r\n                    onChange={(e) => {\r\n                        setBody(e.target.value);\r\n                    }}>\r\n                </textarea>\r\n\r\n                <label>Blog author:</label>\r\n                <select\r\n                    value={author}\r\n                    onChange = { (e)=>setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"NIIMA\">NIIMA</option>\r\n                    <option value = \"NIMMAAA\">NIIMAAA</option>\r\n                </select>\r\n                {!isPending && <button>Add Blog...</button> }\r\n                {isPending && <button>Adding Blog...</button> }\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from './useFetch';\r\nconst BlogDetails = () => {\r\n    const {id} = useParams();\r\n    const {data:blog, isPending, error} = useFetch('http://localhost:8000/blogs/'+ id);\r\n    const historyRedirect = useHistory();\r\n\r\n    const handleDelete = () =>{\r\n        fetch('http://localhost:8000/blogs/'+ blog.id,{\r\n            method:'DELETE',\r\n        }).then( () =>{\r\n            historyRedirect.push('/');\r\n        })\r\n        console.log('deleted');\r\n    }\r\n    return (\r\n        <div className=\"blog-details\">\r\n            {isPending && <div>Loading...</div>}\r\n            {error && <div>{error}</div>}\r\n            {blog && (\r\n                <article>\r\n                    <h2>{ blog.title }</h2>\r\n                    <p>written by { blog.author }</p>\r\n                    <div>{ blog.body }</div>\r\n                    <button onClick={handleDelete}>delete</button>\r\n                </article>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst ErrorNotFound = () => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h2>This page can't be found</h2>\r\n            <Link to=\"/\">Back to the home page...</Link>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ErrorNotFound;","import Navbar from './Navbar'; \nimport Home from './Home';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport ErrorNotFound from './ErrorNotFound';\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home/>\n            </Route>\n            <Route path=\"/create\">\n              <Create/>\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails/>\n            </Route>\n            <Route path=\"*\">\n              <ErrorNotFound/>\n            </Route>\n\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}